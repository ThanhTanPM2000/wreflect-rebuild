//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table Session {
  id String [pk]
  userId String [not null]
  token String [not null]
  expiresAt DateTime [not null]
  data String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  user User [not null]

  indexes {
    (userId, token) [unique]
  }
}

Table Assessment {
  id String [pk]
  name String [not null]
  createdAt DateTime [default: `now()`, not null]
  startDate DateTime [not null]
  endDate DateTime [not null]
  completedDate DateTime
  teamId String [not null]
  creatorId String [not null]
  status AssessmentStatus [not null]
  team Team [not null]
  creator Member [not null]
  evaluations Evaluation [not null]
}

Table Evaluation {
  id String [pk]
  assessorId String [not null]
  isSubmit Boolean [not null]
  assessmentId String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  assessor Member [not null]
  assessment Assessment
  results Result [not null]

  indexes {
    (assessmentId, assessorId) [unique]
  }
}

Table Result {
  id String [pk]
  concerningMemberId String [not null]
  evaluationId String
  answerOnCriteriaList AnswerOnCriteria [not null]
  concerningMember Member [not null]
  evaluation Evaluation
}

Table AnswerOnCriteria {
  id String [pk]
  criteriaId String [not null]
  resultId String
  point Int
  comment String
  updatedAt DateTime [not null]
  criteria Criteria [not null]
  Result Result
}

Table Criteria {
  id String [pk]
  name String [unique, not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  description String [not null]
  answerOnCriteriaList AnswerOnCriteria [not null]
  UserOnCriteria UserOnCriteria [not null]
}

Table Team {
  id String [pk]
  name String [not null]
  createdAt DateTime [default: `now()`, not null]
  startDate DateTime [not null]
  endDate DateTime [not null]
  picture String [not null]
  isPublic Boolean [not null, default: true]
  description String
  defaultBoardId String [unique]
  defaultBoard Board
  status TeamStatus [not null, default: 'DOING']
  members Member [not null]
  boards Board [not null]
  healthChecks HealthCheck [not null]
  teamTemplate HealthCheckTemplate [not null]
  assessments Assessment [not null]
}

Table Board {
  id String [pk]
  teamId String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  createdBy String [not null]
  isPublic Boolean [not null, default: true]
  isLocked Boolean [not null, default: false]
  currentColumnId String
  disableDownVote Boolean [not null, default: false]
  disableUpVote Boolean [not null, default: false]
  isAnonymous Boolean [not null, default: false]
  votesLimit Int [not null, default: 25]
  meetingNote String [not null, default: 'My meeting note...']
  title String [not null]
  timerInProgress Boolean [not null, default: false]
  type BoardType [not null, default: 'PHASE']
  currentPhase PhaseType [not null, default: 'REFLECT']
  endTime DateTime
  team Team [not null]
  teamDefault Team
  columns Column [not null]
  healthCheck HealthCheck
}

Table HealthCheckTemplate {
  id String [pk]
  title String [unique, not null]
  isDefault Boolean [not null]
  isBlocked Boolean [not null, default: false]
  teamId String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  team Team
  healthCheckQuestions TemplateQuestion [not null]
}

Table TemplateQuestion {
  id String [pk]
  title String [not null]
  templateId String [not null]
  color String [not null]
  healthCheckTemplate HealthCheckTemplate [not null]
  description String [not null]
  memberOnHealthCheck MemberOnHealthCheckOnQuestion [not null]

  indexes {
    (title, templateId) [unique]
  }
}

Table HealthCheck {
  id String [pk]
  teamId String [not null]
  boardId String [unique, not null]
  templateId String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  isAnonymous Boolean [not null]
  board Board [not null]
  team Team [not null]
  memberOnHealthCheck MemberOnHealthCheckOnQuestion [not null]

  indexes {
    (teamId, boardId) [unique]
  }
}

Table MemberOnHealthCheckOnQuestion {
  id String [pk]
  healthCheckId String [not null]
  questionId String [not null]
  memberId String [not null]
  point Int [not null]
  comment String [not null]
  healthCheck HealthCheck [not null]
  question TemplateQuestion [not null]
  member Member [not null]
}

Table Column {
  id String [pk]
  boardId String [not null]
  color String [not null, default: 'white']
  title String [not null]
  isActive Boolean [not null, default: true]
  position Int [not null]
  board Board [not null]
  opinions Opinion [not null]
}

Table Opinion {
  id String [pk]
  columnId String
  authorId String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  text String [not null]
  upVote String[] [not null]
  downVote String[] [not null]
  updatedBy String [not null]
  isAction Boolean [not null, default: false]
  isBookmarked Boolean [not null, default: false]
  responsible String [not null, default: 'not-assigned']
  mergedAuthors String[] [not null]
  color String [not null, default: 'pink']
  position Int [not null]
  status OpinionStatus [not null, default: 'NEW']
  author Member [not null]
  column Column
  remarks Remark [not null]
}

Table Remark {
  id String [pk]
  authorId String [not null]
  opinionId String [not null]
  text String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  opinion Opinion [not null]
  author Member [not null]
}

Table Member {
  id String [pk]
  userId String [not null]
  teamId String [not null]
  isOwner Boolean [not null, default: false]
  isSuperOwner Boolean [not null, default: false]
  isPendingInvitation Boolean [not null, default: false]
  isGuess Boolean [not null, default: false]
  invitedBy String
  joinedAt DateTime [default: `now()`, not null]
  user User [not null]
  team Team [not null]
  opinions Opinion [not null]
  Remarks Remark [not null]
  assessments Assessment [not null]
  MemberOnHealthCheck MemberOnHealthCheckOnQuestion [not null]
  results Result [not null]
  evaluations Evaluation [not null]

  indexes {
    (userId, teamId) [unique]
  }
}

Table User {
  id String [pk]
  email String [unique, not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  isAdmin Boolean [not null, default: false]
  isSeenNotification Boolean [not null, default: false]
  isRegistered Boolean [not null, default: true]
  userStatus UserStatus [not null, default: 'OFFLINE']
  nickname String [not null]
  picture String [not null]
  gender Gender [not null, default: 'UNSPECIFIED']
  sub String
  workplace String
  address String
  school String
  introduction String
  talents String
  interests String
  sessions Session [not null]
  members Member [not null]
  notifications Notification [not null]
  skillValues UserOnCriteria [not null]
  banningUser BanningUser
}

Table BanningUser {
  id String [pk]
  isBannedForever Boolean [not null, default: false]
  startBanned DateTime [default: `now()`, not null]
  endBanned DateTime [not null]
  title String [not null]
  description String [not null]
  userId String [unique, not null]
  user User [not null]
}

Table UserOnCriteria {
  id String [pk]
  userId String [not null]
  criteriaId String [not null]
  value Float [not null]
  user User [not null]
  criteria Criteria [not null]

  indexes {
    (userId, criteriaId) [unique]
  }
}

Table Notification {
  id String [pk]
  receiverId String [not null]
  senderId String [not null]
  title String [not null]
  description String [not null]
  linkRedirect String
  isSeen Boolean [not null, default: false]
  createdAt DateTime [default: `now()`, not null]
  receiver User [not null]
}

Table RemiderNotification {
  id String [pk]
  dateSent DateTime [not null]
  title String [not null]
  description String [not null]
  sentBy String [not null]
  sendTo String[] [not null]
}

Enum AssessmentStatus {
  Planned
  Doing
  Complete
  Reopened
}

Enum BoardType {
  DEFAULT
  PHASE
}

Enum PhaseType {
  REFLECT
  GROUP
  VOTES
  DISCUSS
}

Enum StatusHealthCheck {
  OPEN
  CLOSED
}

Enum OpinionStatus {
  NEW
  IN_PROGRESS
  DONE
  REJECTED
}

Enum TeamStatus {
  DOING
  DONE
}

Enum UserConnectionStatus {
  Connect
  Sending
}

Enum Gender {
  UNSPECIFIED
  MALE
  FEMALE
}

Enum UserStatus {
  ONLINE
  OFFLINE
}

Ref: Session.userId > User.id [delete: Cascade]

Ref: Assessment.teamId > Team.id [delete: Cascade]

Ref: Assessment.creatorId > Member.id [delete: Cascade]

Ref: Evaluation.assessorId > Member.id [delete: Cascade]

Ref: Evaluation.assessmentId > Assessment.id [delete: Cascade]

Ref: Result.concerningMemberId > Member.id [delete: Cascade]

Ref: Result.evaluationId > Evaluation.id [delete: Cascade]

Ref: AnswerOnCriteria.criteriaId > Criteria.id [delete: Cascade]

Ref: AnswerOnCriteria.resultId > Result.id [delete: Cascade]

Ref: Team.defaultBoardId - Board.id

Ref: Board.teamId - Team.id [delete: Cascade]

Ref: HealthCheckTemplate.teamId > Team.id [delete: Cascade]

Ref: TemplateQuestion.templateId > HealthCheckTemplate.id [delete: Cascade]

Ref: HealthCheck.boardId - Board.id [delete: Cascade]

Ref: HealthCheck.teamId > Team.id [delete: Cascade]

Ref: MemberOnHealthCheckOnQuestion.healthCheckId > HealthCheck.id [delete: Cascade]

Ref: MemberOnHealthCheckOnQuestion.questionId > TemplateQuestion.id [delete: Cascade]

Ref: MemberOnHealthCheckOnQuestion.memberId > Member.id [delete: Cascade]

Ref: Column.boardId > Board.id [delete: Cascade]

Ref: Opinion.authorId > Member.id [delete: Cascade]

Ref: Opinion.columnId > Column.id [delete: Cascade]

Ref: Remark.opinionId > Opinion.id [delete: Cascade]

Ref: Remark.authorId > Member.id [delete: Cascade]

Ref: Member.userId > User.id [delete: Cascade]

Ref: Member.teamId > Team.id [delete: Cascade]

Ref: BanningUser.userId - User.id [delete: Cascade]

Ref: UserOnCriteria.userId > User.id [delete: Cascade]

Ref: UserOnCriteria.criteriaId > Criteria.id [delete: Cascade]

Ref: Notification.senderId > User.id [delete: Cascade]